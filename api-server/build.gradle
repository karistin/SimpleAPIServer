
plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}


version = '1.0.0'
//sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:2.7.5'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.testng:testng:7.1.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'junit:junit:4.13.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor  'org.projectlombok:lombok'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'
    implementation 'com.github.miwurster:spring-data-influxdb:1.8'
//    https://kmdigit.github.io/2020/03/20/using-influxdb-spring/
    implementation 'org.influxdb:influxdb-java:2.17'
    // slf4j & logback
    implementation('org.slf4j:jcl-over-slf4j')
    implementation('ch.qos.logback:logback-classic')
    implementation 'io.springfox:springfox-swagger2:2.6.1'
    implementation 'io.springfox:springfox-swagger-ui:2.6.1'

}

tasks.named('jar') {
    manifest {
        attributes('Main-Class':"com.lucas.osapi.OsApiApplication",
    )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
tasks.named('test') {
    useJUnitPlatform()
}
